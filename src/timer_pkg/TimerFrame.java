/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timer_pkg;

import java.awt.Color;
import java.awt.TextField;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.InputVerifier;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JSpinner;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicComboBoxUI;
import javax.swing.text.NumberFormatter;


/**
 *
 * @author shero
 */
public class TimerFrame extends javax.swing.JFrame {

    String srcFileName;
    String srcFileDirectoryPath;
    File selectedFile ;
    /**
     * Creates new form TimerFrame
     */
    public TimerFrame() {
        initComponents();
        srcFileName = "";
        srcFileDirectoryPath = "";
        fileResltLabel.setText("");
        buttonGroup1.add(moveForwordRadio);
        buttonGroup1.add(moveBackwordRadio);

// To Allow only digit inputs        
        JFormattedTextField txt = ((JSpinner.NumberEditor) secSpinner.getEditor()).getTextField();
        ((NumberFormatter) txt.getFormatter()).setAllowsInvalid(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        browseBtn = new javax.swing.JButton();
        fileNameTxtF = new javax.swing.JTextField();
        fileResltLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        secSpinner = new javax.swing.JSpinner();
        moveForwordRadio = new javax.swing.JRadioButton();
        moveBackwordRadio = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        changTimeBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Time Modifer");
        setLocation(new java.awt.Point(200, 200));
        setResizable(false);

        browseBtn.setText("Browse");
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });

        fileNameTxtF.setEditable(false);
        fileNameTxtF.setMaximumSize(new java.awt.Dimension(50, 20));
        fileNameTxtF.setPreferredSize(new java.awt.Dimension(300, 20));

        fileResltLabel.setText("jLabel1");

        secSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 600, 1));
        secSpinner.setEditor(new javax.swing.JSpinner.NumberEditor(secSpinner, ""));

        moveForwordRadio.setSelected(true);
        moveForwordRadio.setText("Move subtitlefowrard");

        moveBackwordRadio.setText("Move Subtitle backword");

        jLabel1.setText("sec");

        changTimeBtn.setText("Change Timing");
        changTimeBtn.setEnabled(false);
        changTimeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changTimeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(moveForwordRadio)
                        .addGap(18, 18, 18)
                        .addComponent(moveBackwordRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(secSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(changTimeBtn)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moveForwordRadio)
                    .addComponent(moveBackwordRadio)
                    .addComponent(secSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(changTimeBtn)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jLabel2.setForeground(new java.awt.Color(0, 0, 153));

        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("This tool programmed by Shenouda Fawzy");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(browseBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fileResltLabel)
                                    .addComponent(fileNameTxtF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fileNameTxtF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseBtn))
                .addGap(18, 18, 18)
                .addComponent(fileResltLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed
        
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("SRT files", "srt"));
        int retrunVal = fc.showOpenDialog(this);
        if (retrunVal == JFileChooser.APPROVE_OPTION) { // If the user press open
            selectedFile = fc.getSelectedFile();
            if (selectedFile.canRead() && selectedFile.exists()) {
                changTimeBtn.setEnabled(true);
                srcFileName = selectedFile.getName();
                srcFileDirectoryPath = selectedFile.getParent();
                fileNameTxtF.setText(srcFileName);
                fileResltLabel.setForeground(Color.GREEN);
                fileResltLabel.setText("File loaded successfully");
            } else {
                fileResltLabel.setForeground(Color.RED);
                fileResltLabel.setText("Faild to load file");
            }
        }

    }//GEN-LAST:event_browseBtnActionPerformed

    private void changTimeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changTimeBtnActionPerformed
        try {
            String newFileName = srcFileName.replaceFirst(".srt", "(CHANGED).srt");
            String distFialName = srcFileDirectoryPath + "\\" + newFileName;
            int sec = (int)secSpinner.getValue();
            //File srcFile = new File(srcFileName);
            PrintWriter writer = new PrintWriter(distFialName);
            if(moveForwordRadio.isSelected() == true){
                modifySubtitiles(selectedFile, writer, sec, true);
                jLabel2.setText("Subtitiles changed succsefully by moving text after"
                        + "\nSpeaking by " + sec + " sec");
            }
            else{ // moveBackword is true.
                modifySubtitiles(selectedFile, writer, sec, false);
                jLabel2.setText("Subtitiles changed succsefully by moving text before"
                        + "\nSpeaking by " + sec + " sec");
            }
            
            //Logger.getLogger(TimerFrame.class.getName()).log(Level.INFO, "File Changed successfully.");
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(TimerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_changTimeBtnActionPerformed

    
    /**
     * @param args the command line arguments
     */
    
    
    /**
     * Combine all work together to modify the source subtitle file.
     *      @param srcFile
     *              The source subtitle file path(name)
     *      @param writer 
     *              The destination file path(name).
     *      @param second
     *              The amount of second you want to move the subtitle befor or after the speaking.
     *      @param  isForword 
     *              Specify if the subtitles move After(true) the speaking, or before(false) the speaking.
     */
    
    public  void modifySubtitiles(File srcFile, PrintWriter writer, int Second,boolean isForword) throws FileNotFoundException{
        Timer timer = new Timer(0, 0, 0, 0);
        final String DIGIT_REGEX = "[0-9][0-9]:[0-9][0-9]:[0-9][0-9],[0-9][0-9][0-9] --> [0-9][0-9]:[0-9][0-9]:[0-9][0-9],[0-9][0-9][0-9]";
        Pattern pattern = Pattern.compile(DIGIT_REGEX);
        Matcher m;
        final String ARABIC_CHAR_SET = "Cp1256";
        Scanner sc = new Scanner(srcFile,ARABIC_CHAR_SET);
        //writer = new PrintWriter(distFialName);

        if (srcFile.exists() && srcFile.canRead()) {
// Read From src file
// Do process (increas, decrease)
// Write to distination file
            while (sc.hasNextLine() || sc.hasNext()) {
                String line = sc.nextLine(); // Read from src file
                m = pattern.matcher(line);
                if(m.matches() == true && isForword == false){ 
                // Do process    
                    String [] tokens = line.trim().split(" --> ");
                    String start = timer.decreesSeconds(Second, tokens[0]);
                    String end = timer.decreesSeconds(Second, tokens[1]);
                    
                // Write to distination file    
                    writer.println(start + " --> " + end);
                    continue;
                }else if(m.matches() == true && isForword == true){
                    // Do process    
                    String [] tokens = line.trim().split(" --> ");
                    String start = timer.increesSeconds(Second, tokens[0]);
                    String end = timer.increesSeconds(Second, tokens[1]);
                    
                // Write to distination file    
                    writer.println(start + " --> " + end);
                    continue;
                }
                writer.println(line);
            }
            sc.close();
            writer.close();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton changTimeBtn;
    private javax.swing.JTextField fileNameTxtF;
    private javax.swing.JLabel fileResltLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton moveBackwordRadio;
    private javax.swing.JRadioButton moveForwordRadio;
    private javax.swing.JSpinner secSpinner;
    // End of variables declaration//GEN-END:variables
}
